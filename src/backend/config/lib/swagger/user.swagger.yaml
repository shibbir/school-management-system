paths:
    /api/login:
        post:
            tags:
                - User
            summary: Logs user into the system
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                username:
                                    type: string
                                password:
                                    type: string
                                grant_type:
                                    type: string
                            required:
                                - username
                                - password
                                - grant_type
            responses:
                200:
                    content:
                        applicaiton/json:
                            schema:
                                $ref: "#/components/schemas/UserProfile"
                401:
                    description: Username or password is invalid.
                4xx:
                    description: An error message stating the problem.

    /api/logout:
        get:
            tags:
                - User
            summary: Logs out current logged in user session
            responses:
                204:
                    description: No Content.

    /api/profile:
        get:
            tags:
                - User
            summary: Get the logged in user profile
            responses:
                200:
                    content:
                        applicaiton/json:
                            schema:
                                $ref: "#/components/schemas/UserProfile"
                4xx:
                    description: An error message stating the problem.

    /api/users:
        get:
            tags:
                - User
            summary: Get all the users in the system
            parameters:
              - name: role
                in: query
                description: User role
                schema:
                    type: string
              - name: subject_id
                in: query
                description: Subject Id
                schema:
                    type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    allOf:
                                        - $ref: "#/components/schemas/UserProfile"
                                    properties:
                                        updated_at:
                                            type: string
                                        class:
                                            type: object
                                            properties:
                                                name:
                                                    type: string
                                        class_id:
                                            type: string
                403:
                    description: Access Forbidden.
        post:
            tags:
                - User
            summary: Create a new user in the system
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                forename:
                                    type: string
                                surname:
                                    type: string
                                username:
                                    type: string
                                role:
                                    type: string
                                password:
                                    type: string
                                confirm_password:
                                    type: string
                            required:
                                - forename
                                - surname
                                - username
                                - role
                                - password
                                - confirm_password
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/UserProfile"
                403:
                    description: Access Forbidden.
                4xx:
                    description: An error message stating the problem.

    /api/users/{id}:
        get:
            tags:
                - User
            summary: Get a single user by id
            parameters:
              - name: id
                in: path
                description: User Unique ID
                required: true
                schema:
                    type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/UserProfile"
                403:
                    description: Access Forbidden.
        patch:
            tags:
                - User
            summary: Update attributes of a single user
            parameters:
              - name: id
                in: path
                description: User Unique ID
                required: true
                schema:
                    type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                username:
                                    type: string
                                forename:
                                    type: string
                                surname:
                                    type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/UserProfile"
                403:
                    description: Access Forbidden.
                4xx:
                    description: Username already exists. Please try with a different one.
        delete:
            tags:
                - User
            summary: Permanently delete an user
            parameters:
              - name: id
                in: path
                description: User Unique ID
                required: true
                schema:
                    type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    id:
                                        type: string
                403:
                    description: Access Forbidden.
                4xx:
                    description: An error message stating the problem.

    /api/users/{id}/change-password:
        patch:
            tags:
                - User
            summary: Update user password
            parameters:
              - name: id
                in: path
                description: User Unique ID
                required: true
                schema:
                    type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                current_password:
                                    type: string
                                new_password:
                                    type: string
                                confirm_new_password:
                                    type: string
                            required:
                                - current_password
                                - new_password
                                - confirm_new_password
            responses:
                204:
                    description: No Content.
                4xx:
                    description: An error message stating the problem.

    /api/teachers/{id}/subjects:
        get:
            tags:
                - User
            summary: Get all subjects asigned to a teacher
            parameters:
              - name: id
                in: path
                description: Teacher Unique ID
                required: true
                schema:
                    type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        id:
                                            type: string
                                        name:
                                            type: string
                                        status:
                                            type: string
                                        classes:
                                            type: array
                                            items:
                                                type: object
                                                properties:
                                                    id:
                                                        type: string
                                                    name:
                                                        type: string
                                        updated_at:
                                            type: string
                403:
                    description: Access Forbidden.

    /api/pupils/{id}/subjects:
        get:
            tags:
                - User
            summary: Get all subjects asigned to a pupil
            parameters:
              - name: id
                in: path
                description: Pupil Unique ID
                required: true
                schema:
                    type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        subject_id:
                                            type: string
                                        subject_name:
                                            type: string
                                        grade:
                                            type: string
                                        teacher_name:
                                            type: string
                403:
                    description: Access Forbidden.

    /api/pupils/{pupil_id}/subjects/{subject_id}:
        get:
            tags:
                - User
            summary: Get all the test with grades for a pupil under a selected subject
            parameters:
              - name: pupil_id
                in: path
                description: Pupil Unique ID
                required: true
                schema:
                    type: string
              - name: subject_id
                in: path
                description: Subject Unique ID
                required: true
                schema:
                    type: string
            responses:
                200:
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    id:
                                        type: string
                                    name:
                                        type: string
                                    tests:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                id:
                                                    type: string
                                                name:
                                                    type: string
                                                date:
                                                    type: string
                                                test_results:
                                                    type: array
                                                    items:
                                                        type: object
                                                        properties:
                                                            pupil_id:
                                                                type: string
                                                            grade:
                                                                type: string
                403:
                    description: Access Forbidden.

components:
    schemas:
        UserProfile:
            properties:
                id:
                    type: string
                username:
                    type: string
                forename:
                    type: string
                surname:
                    type: string
                role:
                    type: string
